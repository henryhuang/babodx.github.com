<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Database | 鑫的方向]]></title>
  <link href="http://babodx.github.com/blog/categories/database/atom.xml" rel="self"/>
  <link href="http://babodx.github.com/"/>
  <updated>2013-02-27T22:11:05+08:00</updated>
  <id>http://babodx.github.com/</id>
  <author>
    <name><![CDATA[babodx]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mysql设置my.cnf来记录下全部sql请求]]></title>
    <link href="http://babodx.github.com/blog/2009/12/21/mysql-log-sql/"/>
    <updated>2009-12-21T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2009/12/21/mysql-log-sql</id>
    <content type="html"><![CDATA[<p>要想记录下提交到mysql数据库的全部sql语句，可以通过修改my.cnf来实现</p>

<p>修改/etc/my.cnf文件</p>

<p>找到[mysqld]段
加入</p>

<p><code>
log=queryLog
log-slow-queries=showquerylog
</code></p>

<p>然后就可以到/var/lib/mysql/目录下找到queryLog和showquerylog日志文件了</p>

<p>里面记录这每个提交到数据库执行的sql语句。</p>

<p>我的系统CentOS 4.4 rpm方式安装的mysql 5.0.57,如果其它系统或者其它安装方式，可能文件路径会有些不同。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何向万网的Mysql数据库导入数据]]></title>
    <link href="http://babodx.github.com/blog/2009/12/21/mysql-import/"/>
    <updated>2009-12-21T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2009/12/21/mysql-import</id>
    <content type="html"><![CDATA[<p>昨天单位由一个网站，要放到万网的虚拟主机去。
网站是jsp写的，程序好导。直接ftp过去就可以了。</p>

<p>可是mysql的数据库怎么导呢？</p>

<p>我先用</p>

<p><code>
mysqldump database_name&gt;database_name.sql
</code></p>

<p>然后把这个database_name.sql下载下来。</p>

<p>再给虚拟主机空间上传一个phpmyadmin来做数据库管理用。这样就可以使用phpmyadmin导入数据了。</p>

<p>如果网站数据小，这样就ok了。可是我的database_name.sql有60M</p>

<p>万网空间上的phpmyadmin只能最大支持2M</p>

<p>于是只能另外想办法。我先导入表格结构吧。</p>

<p><code>
mysqldump –d database_name&gt;database_name.sql
</code></p>

<p>在phpmyadmin里，选择好数据库后，用导入功能，将database_name.sql导入</p>

<p><img src="http://farm9.staticflickr.com/8096/8510015688_bc8709cc96.jpg" alt="phpmyadmin图片" /></p>

<p>现在有了表结构了，但是每个表都没有数据。我们再继续导入数据。</p>

<p>我的表里面，除了一个news表格特别大，大约51M，其他都在2M一下。所以我每个表格生成一个txt文件，然后导入到万网的数据库。</p>

<p>本地进入mysql>提示符后，用以下命令将数据的表格数据导出。</p>

<p><code>
select * from admin into outfile “/tmp/admin.txt” fields terminated by “|” lines terminated by “@”
</code></p>

<p>上面命令将本地数据库的admin表，导出到/tmp/目录下的admin.txt文件。</p>

<p>我们有几个表格，就用这个命令导出几个txt文件。</p>

<p>然后将txt文件用gzip压缩，因为phpmyadmin支持gzip压缩格式的。</p>

<p><code>
cd /tmp/
gzip admin.txt
</code></p>

<p>最后将压缩的admin.txt.gz下载到本地，用浏览器上传给phpmyadmin导入</p>

<p>![](</p>

<p><strong>解决news表格过大问题</strong></p>

<p>我的news表格有51Ｍ，就算gzip压缩后，还有7M左右，还是不能用phpmyadmin导入。我们可以将news表格的数据切分为多个txt文件，然后保证每个文件gzip后，在2M以内就可以。这个切分就要根据具体表格来判断了。</p>

<p>我先查询了news表格一共有多少条记录</p>

<p><code>
select count(*) from news;
</code></p>

<p>返回1477条，表格是51M。压缩后的表格是7M。</p>

<p>7M/2M=3.5</p>

<p>1477/3.5=422条。</p>

<p>根据上面的计算，只要按照422条一个文件来分割就可以了。为了保险，因为每条记录的大小并不是一样的平均分配，我按照每个文件200条记录来切分。</p>

<p>```
select * from news where newId>0 limit 200 into outfile “/tmp/news0.txt” fields terminated by “|” lines terminated by “@”;</p>

<p>然后用</p>

<p><code>
select max(newId) from news where newId&gt;0 limit 200;
</code></p>

<p>查看下200条记录后，是到了那条记录，下次分割就从那条开始
这样分割出来的8个文件，一次压缩后，上传到phpmyadmin导入。就完成了全部表格的导入工作。</p>

<p><strong>总结</strong></p>

<p>其实如果数据本身不复杂，直接用navicat也可以远程连接导入的。但是navicat不支持定义 lines terminated。我的news表格里面存在的都是html代码，经常出现换行符，所以只能选择用phpmyadmin了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何建立两个表间的外键]]></title>
    <link href="http://babodx.github.com/blog/2009/12/21/howto-create-foreign-key-on-mysql/"/>
    <updated>2009-12-21T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2009/12/21/howto-create-foreign-key-on-mysql</id>
    <content type="html"><![CDATA[<p>建立Mysql两个表间的外键,需要满足三个条件</p>

<ol>
<li>两个表必须是InnoDB表类型</li>
<li>使用在外键关系的域必须为索引型(Index)</li>
<li>使用在外键关系的域必须与数据类型相似</li>
</ol>


<p>下面举例说明</p>

<p>我们创建一个班级表和一个学生表,并建立一个外键</p>

<p>创建班级表</p>

<p><code>
CREATE TABLE class (id INT NOT NULL AUTO_INCREMENT, classname VARCHAR(50) NOT NULL, PRIMARY KEY(id)) ENGINE=INNODB;
</code></p>

<p>插入班级数据</p>

<p><code>
INSERT INTO class VALUES (1,"一班"),(2,"二班"),(3,"三班");
</code></p>

<p>创建学生表</p>

<p><code>
CREATE TABLE students (id INT(4) NOT NULL, name VARCHAR(50) NOT NULL, FK_class INT(4) NOT NULL, INDEX (FK_class), FOREIGN KEY (FK_class) REFERENCES class (id), PRIMARY KEY(id)) ENGINE=INNODB;
</code></p>

<p>验证外键约束性,我们向students表插入一个学生数据,并让FK_class的值为一个在class表里面不存在的值.</p>

<p><code>
mysql&gt; INSERT INTO students VALUES (1,"zhang",5);
</code></p>

<p>马上就会看到Mysql报错</p>

<p><code>
ERROR 1452 : Cannot add or update a child row: a foreign key constraint fails (`test/students`, CONSTRAINT `students_ibfk_1` FOREIGN KEY (`FK_class`) REFERENCES `class` (`id`))
</code></p>

<p>以上证明外键可以正常工作了</p>

<p>在Mysql下测试了以下,不建立index,并且不指定innodb格式.
版本</p>

<p>+----------------------+
| version()            |
+----------------------+
| 5.0.24a-community-nt |
+----------------------+</p>

<p>建立class表</p>

<p><code>
CREATE TABLE class (id INT NOT NULL AUTO_INCREMENT, classname VARCHAR(50) NOT NULL, PRIMARY KEY(id));
</code></p>

<p>建立students表</p>

<p><code>
CREATE TABLE students (id INT(4) NOT NULL, name VARCHAR(50) NOT NULL, FK_class INT(4) NOT NULL, FOREIGN KEY (FK_class) REFERENCES class (id), PRIMARY KEY(id));
</code></p>

<p>通过Navicat查看,上面语句建立的两个表,也会默认用INNODB存储,而且也在students表建立了index和外键.一切正常.</p>
]]></content>
  </entry>
  
</feed>
