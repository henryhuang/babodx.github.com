<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | 鑫的方向]]></title>
  <link href="http://babodx.github.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://babodx.github.com/"/>
  <updated>2013-02-26T17:25:23+08:00</updated>
  <id>http://babodx.github.com/</id>
  <author>
    <name><![CDATA[babodx]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ubuntu 8.10下同步wm6.1手机]]></title>
    <link href="http://babodx.github.com/blog/2009/12/21/winphone-SynceWithUbuntu/"/>
    <updated>2009-12-21T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2009/12/21/winphone-SynceWithUbuntu</id>
    <content type="html"><![CDATA[<p>参考了</p>

<ul>
<li><a href="http://www.synce.org/moin/SynceWithUbuntu">http://www.synce.org/moin/SynceWithUbuntu</a></li>
<li>http://hi.baidu.com/john_zhy/blog/item/50e39f317240141febc4af5a.html</li>
</ul>


<p>我的本本 IBM R61</p>

<p>系统 ubuntu 8.10从 8.04升级上来的。</p>

<p>手机 eten X800 wm6.1英文系统</p>

<p>原来一直不能在ubuntu下面同步手机资料，昨天参考了上面两个帖子，最后成功了。</p>

<p>1、首先添加源</p>

<p><code>
sudo gedit   /etc/apt/sources.list
</code></p>

<p>在末尾添加</p>

<p>```
deb <a href="http://ppa.launchpad.net/synce/ubuntu" target="_blank">http://ppa.launchpad.net/synce/ubuntu</a> hardy main</p>

<p>deb-src <a href="http://ppa.launchpad.net/synce/ubuntu" target="_blank">http://ppa.launchpad.net/synce/ubuntu</a> hardy main
```</p>

<p>保存，关闭</p>

<p><code>
sudo apt-get update
</code></p>

<p>我没有更新源，但是也成功。可能是8.10的缘故</p>

<p>2、更新usb驱动（仅内核在2.6.24-19之前的，如果比这个新请跳过本步骤）</p>

<p><code>
sudo rmmod rndis_host cdc_ether usbnet
sudo rm /lib/modules/`uname -r`/kernel/drivers/net/usb/{rndis_host,cdc_ether,usbnet}.ko
sudo apt-get install usb-rndis-source cdbs
sudo module-assistant auto-install usb-rndis
sudo apt-get install synce-hal librra0-tools librapi2-tools
</code></p>

<p>因为我的内核是2.6.27-7的，所以跳过了这步。但是我安装了后面的软件包</p>

<p><code>
sudo apt-get install synce-hal librra0-tools librapi2-tools
</code></p>

<p>3、安装<strong>SynCE-GNOME</strong></p>

<p><code>
sudo apt-get install python-setuptools
</code></p>

<p> 下载<a href="http://downloads.sourceforge.net/synce/synce-gnome-0.11.tar.gz">synce-gnome-0.11.tar.gz</a></p>

<p> 解压，在终端进入其目录，运行</p>

<p><code>
python setup.py build
sudo python setup.py install
</code></p>

<p>安装<strong>notification-daemon</strong>（如果没有安装过的话，用新得立软件包管理器搜索一下就可以了）</p>

<p>这个步骤完全做了一次，notification-daemon系统已经安装过了</p>

<p>4、连接好手机，运行</p>

<p><code>
/sbin/ifconfig -a | grep 80:00:60:0f:e8:00   | cut -d " " -f 1
</code></p>

<p>记下他输出的东西</p>

<p><code>
sudo gedit   /etc/network/interfaces
</code></p>

<p>在末尾添加<code>iface &lt;rndis0&gt; inet dhcp</code></p>

<p>ps:"&lt;>"里面的是我在上面那步里输出的，你应该更换成你自己的，不带“&lt;>“ 保存并关闭，然后运行</p>

<p><code>
sudo /etc/init.d/networking restart
</code></p>

<p>这次也是按照作的，我的网卡是多出来一个eth1(这个根据自己系统决定)。所以我在interfaces文件后面加入了</p>

<p><code>
iface eth1 inet dhcp
</code></p>

<p>5、安装OpenSync</p>

<p><code>
sudo apt-get install multisync-tools opensync-plugin-evolution opensync-plugin-synce
</code></p>

<p>6、现在该安装的都安装好了，就可以开始同步了<code>synce-sync-engine</code>如果出现如下错误</p>

<p>```
File "/usr/bin/sync-engine", line 84, in <module></p>

<p> configObj = Config.Config(progopts)</p>

<p>   File "/usr/lib/python2.5/site-packages/SyncEngine/config.py", line 292, in <strong>init</strong></p>

<p> oldconf = os.path.join(self.path,"config.xml")</p>

<p>AttributeError: Config instance has no attribute 'path'</p>

<p>```</p>

<p>请下载<a href="http://synce.svn.sf.net/svnroot/synce/releases/0.11.1/sync-engine/config/config.xml">config.xml</a>，保存为~/.synce/config.xml（提示："~"为自己的家目录)</p>

<p>创建同步项目<strong>synce-create-partnership "Linux desktop" "Contacts,Calendar"</strong></p>

<p>ps：还有别的，可自行选择Contacts， Calendar， Tasks， Files 等</p>

<p>创建OpenSync group</p>

<p>```
msynctool --addgroup synce-sync</p>

<p>msynctool --addmember synce-sync synce-opensync-plugin</p>

<p>msynctool --addmember synce-sync evo2-sync
```</p>

<p>然后同步synce-sync-engine</p>

<p><code>
msynctool --sync synce-sync
</code></p>

<p>他会同步到evolution里面</p>

<p>我上面的照着做，全部成功了。</p>

<p><strong>我的一些问题</strong></p>

<p>据说安装了synce-gnomevfs后，可以在Nautilus里面看手机里的内容，但是我没有成功
目前只能通过synce-pls、synce-pcp等命令，来操作手机里面文件。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[试用ubuntu 8.04和LVM动态增加分区]]></title>
    <link href="http://babodx.github.com/blog/2009/12/21/ubuntu-dynamic-resize-lvm/"/>
    <updated>2009-12-21T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2009/12/21/ubuntu-dynamic-resize-lvm</id>
    <content type="html"><![CDATA[<p>我在虚拟机VMware里面安装了ubuntu 8.04.</p>

<p>安装的时候，只是选择了openssh这个服务。安装后感觉系统很干净</p>

<p><strong>磁盘占用</strong>
<code>
/dev/mapper/ubuntu-root                      5.6G 321M 5.3G   6% /
</code></p>

<p>系统就用了不到400M</p>

<p><strong>内存</strong></p>

<p><code>
                   total       used       free     shared    buffers     cached
Mem:           249         39        209          0          3         16
</code>
减掉buffers和cached的内容，还有我ssh远程连接的占用。实际系统启动后内存也就需要17M</p>

<p><strong>LVM</strong></p>

<p>安装系统的时候，我就选择了整个磁盘启用LVM，采用ubuntu默认分区的方式。</p>

<p>ubuntu默认分了2个区/sda1和/sda5。sda1用来做/boot，sda5用来做LVM。文件系统都是默认的ext3。</p>

<p>然后在LVM里面默认建立了2个LV( Logical volume)，一个/dev/ubuntu/root用来做/ ，一个/dev/ubuntu/swap_1用来做swap交换分区。我又手动修改了文件系统，采用reiserfs。</p>

<p><strong>动态添加/分区大小</strong></p>

<p>我先添加了一个硬盘，系统识别为sdb</p>

<p>对这个盘<strong>创建分区</strong>（LVM可以不用分区的，但是需要动态添加到/分区，所以需要有文件系统，不能添加后格式化/分区吧）</p>

<p><code>
sudo fdisk /dev/sdb
n --&gt;创建分区
t --&gt;修改分区类型为8e
w --&gt;保存结果
</code></p>

<p>现在系统可以识别/dev/sdb1这个设备了。</p>

<p><strong>创建PV(Physical volume)</strong></p>

<p><code>
sudo pvcreate /dev/sdb1
</code></p>

<p><strong>创建VG(Volume group)</strong></p>

<p><code>
sudo vgextend ubuntu /dev/sdb1
</code></p>

<p><strong>扩展LV(Logical volume)</strong></p>

<p><code>
sudo lvextend -L +2G /dev/ubuntu/root&lt;br&gt;
</code></p>

<p>这样就给/dev/ubuntu/root这个设备大小增加了2G。可以通过sudo lvdisply查看
但是这个时候df -h还是没有变化的，需要调整文件系统。</p>

<p><code>
sudo resize_reiserfs -s +2G /dev/ubuntu/root&lt;br&gt;
</code></p>

<p>这样就完成了全部动态扩展分区。而且是服务器一直在线状态，不用关机。</p>

<p>调整Swap</p>

<p>还是和上面一样的情景，只要VG里面还有剩余空间就可以用来扩展swap用。</p>

<p><code>
sudo swapoff -a
</code></p>

<p>关闭正在用的swap分区</p>

<p>然后</p>

<p><code>
sudo lvextend -L +200M /dev/ubuntu/swap_1
</code></p>

<p>给/dev/ubuntu/swap_1扩展了200M容量</p>

<p><code>
sudo mkswap /dev/ubuntu/swap_1
</code></p>

<p>建立swap的文件系统</p>

<p>最后</p>

<p><code>
sudo swapon -a
</code></p>

<p>启用新的swap系统。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何快速统计服务器访问量]]></title>
    <link href="http://babodx.github.com/blog/2009/12/21/quick-stats-server-visits/"/>
    <updated>2009-12-21T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2009/12/21/quick-stats-server-visits</id>
    <content type="html"><![CDATA[<p>最近看了javaeye上面<strong>robbin</strong>的一篇文章，学习到了很多知识。</p>

<p><a href="http://robbin.javaeye.com/blog/97287">http://robbin.javaeye.com/blog/97287</a> 如何快速统计RoR网站的访问量</p>

<p>我的服务器是Apache+tomcat的配置，上面跑了几个网站。都是基于apache 虚拟主机配置的。</p>

<p>apache配置如下</p>

<p><code>
Include conf/vhost_*.conf
</code></p>

<p>然后每个虚拟主机对应一个配置文件</p>

<p>例如下面的(一些信息用???代替了，都是域名和姓名等个人信息)</p>

<p><code>
&lt;VirtualHost *:80&gt;
    ServerAdmin ???&lt;a href="mailto:???@???.cn"&gt;@???.cn&lt;/a&gt;
    DocumentRoot /home/???/www
    ServerName &lt;a href="http://www./???.org"&gt;www.???.org&lt;/a&gt;
    DirectoryIndex index.jsp index.htm
    ErrorLog logs/abc-error_log
    CustomLog "| /usr/sbin/rotatelogs /var/log/httpd/abc-access_%Y%m%d.log 86400" common
    &lt;Location "/*.jsp"&gt;
         JkUriSet worker ajp13:localhost:8009
    &lt;/Location&gt;
&lt;/VirtualHost&gt;
</code></p>

<p>这样配置后，就会在/var/log/httpd下面按照虚拟主机名字和日期，每天生成一个访问日志文件</p>

<p><strong>统计每日动态请求处理总数</strong></p>

<p><code>
cat /var/log/httpd/abc-access_20081116.log |grep "200 "|wc -l
</code></p>

<p><strong>统计URL的访问频度</strong></p>

<p><code>
cat /var/log/httpd/abc-access_20081116.log |grep "200 "|awk '{print $7}'|sort|uniq -c
</code></p>

<p><strong>统计时间访问频度</strong></p>

<p><code>
cat /var/log/httpd/abc-access_20081116.log |grep "200 "|awk '{print $4}'|awk -F : '{print $2}'|sort|uniq -c
</code></p>

<p><strong>以上这些是基于CentOS+apache+tomcat实现的</strong></p>

<p><code>
[root@ict ~]# cat /var/log/httpd/esdinchina-access_20081117.log |grep "200 "|awk '{print $4}'|awk -F : '{print $2}'|sort|uniq -c
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[怎么mount一个xen的img映像。转载]]></title>
    <link href="http://babodx.github.com/blog/2009/12/21/howto-mount-xen-img/"/>
    <updated>2009-12-21T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2009/12/21/howto-mount-xen-img</id>
    <content type="html"><![CDATA[<ul>
<li>First you need to find out the partitions and the startsector of partitions:</li>
</ul>


<p><code>
[root@xen rruban]# file rheltest.img rheltest.img: x86 boot sector, GRand Unified Bootloader (0.94);
partition
1: ID=0x83, active, starthead 1, startsector 63, 208782 sectors; partition
2: ID=0x8e, starthead 0, startsector 208845, 3871665 sectors, code offset 0x48
</code></p>

<p>There are 3 partitions inside the image file. The startsector of each partition is also listed. Boot partition will have start sector 63.</p>

<ul>
<li>Now you need to get the sector size:</li>
</ul>


<p><code>
[root@xen]fdisk -lu rheltest.img
Disk rheltest.img: 0 MB, 0 bytes 255 heads, 63 sectors/track, 0 cylinders, total 0 sectors
Units = sectors of 1 * 512 = 512 bytes
Device Boot Start End Blocks Id System
rheltest.img1 * 63 208844 104391 83 Linux
rheltest.img2 208845 4080509 1935832+ 8e Linux LVM
</code></p>

<p>The above shows the sector byte size is 512 byte.</p>

<ul>
<li>To calculating the offset: offset = start_sector x sector_byte_size.</li>
</ul>


<p>The startsector is 63 for the first partition, therefore the first partition offset is: 63x512=32256</p>

<ul>
<li>Finally, to mount the xen image, use:</li>
</ul>


<p><code>
mount -o loop,offset=32256 test.img /foldername
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS里的Xen配置pygrub]]></title>
    <link href="http://babodx.github.com/blog/2009/12/21/centos-xen-pygrub/"/>
    <updated>2009-12-21T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2009/12/21/centos-xen-pygrub</id>
    <content type="html"><![CDATA[<p>如果用virt-install生成一台虚拟服务器
在查看配置的时候，会发现已经没有了kernel=这个配置来制定启动内核。而是用了</p>

<p><code>bootloader = '/usr/bin/pygrub'</code></p>

<p>关于这个，可以参考
<a href="http://wiki.xensource.com/xenwiki/PyGrub">http://wiki.xensource.com/xenwiki/PyGrub</a></p>

<p>CentOS 5.3的虚拟化，好像没有了XenU的内核，而是改用了这种新的方式。</p>

<p>反正我用kernel启动失败了。后来用这个方式已经可以正常使用虚拟服务器了。</p>
]]></content>
  </entry>
  
</feed>
