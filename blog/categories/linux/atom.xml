<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | 鑫的方向]]></title>
  <link href="http://babodx.github.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://babodx.github.com/"/>
  <updated>2013-02-26T16:28:15+08:00</updated>
  <id>http://babodx.github.com/</id>
  <author>
    <name><![CDATA[babodx]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[试用ubuntu 8.04和LVM动态增加分区]]></title>
    <link href="http://babodx.github.com/blog/2009/12/21/ubuntu-dynamic-resize-lvm/"/>
    <updated>2009-12-21T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2009/12/21/ubuntu-dynamic-resize-lvm</id>
    <content type="html"><![CDATA[<p>我在虚拟机VMware里面安装了ubuntu 8.04.</p>

<p>安装的时候，只是选择了openssh这个服务。安装后感觉系统很干净</p>

<p><strong>磁盘占用</strong>
<code>
/dev/mapper/ubuntu-root                      5.6G 321M 5.3G   6% /
</code></p>

<p>系统就用了不到400M</p>

<p><strong>内存</strong></p>

<p><code>
                   total       used       free     shared    buffers     cached
Mem:           249         39        209          0          3         16
</code>
减掉buffers和cached的内容，还有我ssh远程连接的占用。实际系统启动后内存也就需要17M</p>

<p><strong>LVM</strong></p>

<p>安装系统的时候，我就选择了整个磁盘启用LVM，采用ubuntu默认分区的方式。</p>

<p>ubuntu默认分了2个区/sda1和/sda5。sda1用来做/boot，sda5用来做LVM。文件系统都是默认的ext3。</p>

<p>然后在LVM里面默认建立了2个LV( Logical volume)，一个/dev/ubuntu/root用来做/ ，一个/dev/ubuntu/swap_1用来做swap交换分区。我又手动修改了文件系统，采用reiserfs。</p>

<p><strong>动态添加/分区大小</strong></p>

<p>我先添加了一个硬盘，系统识别为sdb</p>

<p>对这个盘<strong>创建分区</strong>（LVM可以不用分区的，但是需要动态添加到/分区，所以需要有文件系统，不能添加后格式化/分区吧）</p>

<p><code>
sudo fdisk /dev/sdb
n --&gt;创建分区
t --&gt;修改分区类型为8e
w --&gt;保存结果
</code></p>

<p>现在系统可以识别/dev/sdb1这个设备了。</p>

<p><strong>创建PV(Physical volume)</strong></p>

<p><code>
sudo pvcreate /dev/sdb1
</code></p>

<p><strong>创建VG(Volume group)</strong></p>

<p><code>
sudo vgextend ubuntu /dev/sdb1
</code></p>

<p><strong>扩展LV(Logical volume)</strong></p>

<p><code>
sudo lvextend -L +2G /dev/ubuntu/root&lt;br&gt;
</code></p>

<p>这样就给/dev/ubuntu/root这个设备大小增加了2G。可以通过sudo lvdisply查看
但是这个时候df -h还是没有变化的，需要调整文件系统。</p>

<p><code>
sudo resize_reiserfs -s +2G /dev/ubuntu/root&lt;br&gt;
</code></p>

<p>这样就完成了全部动态扩展分区。而且是服务器一直在线状态，不用关机。</p>

<p>调整Swap</p>

<p>还是和上面一样的情景，只要VG里面还有剩余空间就可以用来扩展swap用。</p>

<p><code>
sudo swapoff -a
</code></p>

<p>关闭正在用的swap分区</p>

<p>然后</p>

<p><code>
sudo lvextend -L +200M /dev/ubuntu/swap_1
</code></p>

<p>给/dev/ubuntu/swap_1扩展了200M容量</p>

<p><code>
sudo mkswap /dev/ubuntu/swap_1
</code></p>

<p>建立swap的文件系统</p>

<p>最后</p>

<p><code>
sudo swapon -a
</code></p>

<p>启用新的swap系统。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[怎么mount一个xen的img映像。转载]]></title>
    <link href="http://babodx.github.com/blog/2009/12/21/howto-mount-xen-img/"/>
    <updated>2009-12-21T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2009/12/21/howto-mount-xen-img</id>
    <content type="html"><![CDATA[<ul>
<li>First you need to find out the partitions and the startsector of partitions:</li>
</ul>


<p><code>
[root@xen rruban]# file rheltest.img rheltest.img: x86 boot sector, GRand Unified Bootloader (0.94);
partition
1: ID=0x83, active, starthead 1, startsector 63, 208782 sectors; partition
2: ID=0x8e, starthead 0, startsector 208845, 3871665 sectors, code offset 0x48
</code></p>

<p>There are 3 partitions inside the image file. The startsector of each partition is also listed. Boot partition will have start sector 63.</p>

<ul>
<li>Now you need to get the sector size:</li>
</ul>


<p><code>
[root@xen]fdisk -lu rheltest.img
Disk rheltest.img: 0 MB, 0 bytes 255 heads, 63 sectors/track, 0 cylinders, total 0 sectors
Units = sectors of 1 * 512 = 512 bytes
Device Boot Start End Blocks Id System
rheltest.img1 * 63 208844 104391 83 Linux
rheltest.img2 208845 4080509 1935832+ 8e Linux LVM
</code></p>

<p>The above shows the sector byte size is 512 byte.</p>

<ul>
<li>To calculating the offset: offset = start_sector x sector_byte_size.</li>
</ul>


<p>The startsector is 63 for the first partition, therefore the first partition offset is: 63x512=32256</p>

<ul>
<li>Finally, to mount the xen image, use:</li>
</ul>


<p><code>
mount -o loop,offset=32256 test.img /foldername
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS里的Xen配置pygrub]]></title>
    <link href="http://babodx.github.com/blog/2009/12/21/centos-xen-pygrub/"/>
    <updated>2009-12-21T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2009/12/21/centos-xen-pygrub</id>
    <content type="html"><![CDATA[<p>如果用virt-install生成一台虚拟服务器
在查看配置的时候，会发现已经没有了kernel=这个配置来制定启动内核。而是用了</p>

<p><code>bootloader = '/usr/bin/pygrub'</code></p>

<p>关于这个，可以参考
<a href="http://wiki.xensource.com/xenwiki/PyGrub">http://wiki.xensource.com/xenwiki/PyGrub</a></p>

<p>CentOS 5.3的虚拟化，好像没有了XenU的内核，而是改用了这种新的方式。</p>

<p>反正我用kernel启动失败了。后来用这个方式已经可以正常使用虚拟服务器了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS 5.3 安装虚拟化后的内存识别问题.]]></title>
    <link href="http://babodx.github.com/blog/2009/12/21/centos-xen-memory-problem/"/>
    <updated>2009-12-21T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2009/12/21/centos-xen-memory-problem</id>
    <content type="html"><![CDATA[<p>昨天单位到了2台SUN x4450.</p>

<p><strong>硬件配置相当强力.</strong></p>

<p>CPU 4颗6核的 Intel(R) Xeon(R) CPU           X7460 @ 2.66GHz</p>

<p>系统可以识别出24颗处理器</p>

<p><code>
[root@localhost ~]# cat /proc/cpuinfo |grep processor|wc -l
24
</code></p>

<p>内存64G</p>

<p>在内存问题上,我郁闷了一阵子.我用dmesg、free、top查看，都是32G</p>

<p>开始以为CentOS 5.3的64位内核就能支持到32G呢。又尝试在启动参数里加mem=64G</p>

<p>又上论坛询问、查看官方文档，都说CentOS 5.3 64bit应该没有内存限制的。</p>

<p>后来我发现了，原来问题出在安装的虚拟化上面</p>

<p>用xm top可以正确识别内存。而且安装的系统，只是当作xm 里面的一个dom0来运行的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS 5.3下成功安装了Xen虚拟化服务。]]></title>
    <link href="http://babodx.github.com/blog/2009/12/21/centos-install-xen/"/>
    <updated>2009-12-21T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2009/12/21/centos-install-xen</id>
    <content type="html"><![CDATA[<p>今天参照下面文档成功安装了虚拟化服务。</p>

<p><a href="http://www.howtoforge.com/paravirtualization-with-xen-on-centos-5.3-x86_64-p2">http://www.howtoforge.com/paravirtualization-with-xen-on-centos-5.3-x86_64-p2</a></p>

<p>并且在虚拟化服务里，安装了一台vm01的虚拟Centos。</p>

<p>不过时间比较长，通过网络安装，用了4个小时。</p>
]]></content>
  </entry>
  
</feed>
