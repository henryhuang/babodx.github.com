<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | 鑫的方向]]></title>
  <link href="http://babodx.github.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://babodx.github.com/"/>
  <updated>2013-02-27T11:23:29+08:00</updated>
  <id>http://babodx.github.com/</id>
  <author>
    <name><![CDATA[babodx]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[postfix+extmail的附件大小显示和限制问题解决办法]]></title>
    <link href="http://babodx.github.com/blog/2010/01/24/postfix-extmail-attachment-bug/"/>
    <updated>2010-01-24T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2010/01/24/postfix-extmail-attachment-bug</id>
    <content type="html"><![CDATA[<p>最近在给一个公司部署了postfix+extmail的邮件系统后，遇到了附件大小限制问题。</p>

<p>extmail默认设置是5M，但是由于extmail的统计大小方法问题，一般附件限制比设置的小了1/3。也就是你设置了5M，也就能到3M多。</p>

<p>这里先说下大小限制的配置。</p>

<p>一、修改extmail的webmail.cf文件</p>

<p>```
SYS_MESSAGE_SIZE_LIMIT = 5242880 注意：以位为单位为5M字节。</p>

<p>SYS_MESSAGE_SIZE_LIMIT = xxx
```</p>

<p>二、修改/etc/postfix/main.cf文件，</p>

<p><code>
message_size_limit = xxx
</code></p>

<p>三、重启postfix即可，<code>service postfix restrart</code> 和重启apache，<code>service httpd restart</code></p>

<p><strong>如何解决附件限制大小和系统文件大小相差1/3呢？</strong></p>

<p>首先是修改/var/www/extsuite/extmail/libs/Ext/App目录下的Compose.pm文件</p>

<p>```
sub is_oversize {</p>

<pre><code>my $self = shift;   
my $sys = $self-&gt;{sysconfig};   
my $maxsize = $sys-&gt;{SYS_MESSAGE_SIZE_LIMIT};   
my $tsize = shift;   

return 0 unless defined $maxsize and $maxsize &gt; 0;   
return 0 unless defined $tsize and $tsize &gt; 0;   

if ($tsize &gt;= $maxsize) {   
    return $maxsize;   
}   
0;   
</code></pre>

<p>} <br/>
```</p>

<p>注意到上面的if ($tsize >= $maxsize)了吧，修改为if ($tsize >= 1.29*$maxsize)</p>

<p>这样修改后，基本extmail的附件限制大小就和系统显示的文件大小一样。</p>

<p>目前还有一个文件，就是我们上传一个1M的内容，显示出来的附件大小大约是1.3M，这个问题需要修改一个human函数解决。</p>

<p>在/var/www/extsuite/extmail/libs/Ext目录下，打开Utils.pm文件</p>

<p>找到如下函数</p>

<p>```
sub human_size {</p>

<pre><code>my $s = $_[0];   
if($s&lt;1024) {   
    return sprintf("%0.2f", $s/1024)."K";   
}elsif($s&lt;1024*1024) {   
    return sprintf("%0.1f", $s/1024)."K";   
}else {   
    return sprintf("%0.1f", $s/(1024*1024))."M";   
}   
</code></pre>

<p>} <br/>
```
将函数修改如下</p>

<p>```
sub human_size {</p>

<pre><code>my $s = $_[0];   
if($s&lt;1024) {   
    return sprintf("%0.2f", $s/1024/1.36)."K";   
}elsif($s&lt;1024*1024) {   
    return sprintf("%0.1f", $s/1024/1.36)."K";   
}else {   
    return sprintf("%0.1f", $s/(1024*1024*1.36))."M";   
}   
</code></pre>

<p>} <br/>
```</p>

<p>这样就解决了extmail的附件大小显示和限制问题。</p>

<p>目前还有一个遗留问题，就是在folder.htm模板界面里显示的邮件大小还是比系统文件大1/3。这个不知道怎么修改了。找到了对应函数，但是它直接显示的多少M或者多少K，用除1.36会出现问题。。。。这个期待高手解决了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[extman后台登陆问题解决方法]]></title>
    <link href="http://babodx.github.com/blog/2010/01/19/extman/"/>
    <updated>2010-01-19T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2010/01/19/extman</id>
    <content type="html"><![CDATA[<p>前一阵子给一个公司架设了postfix+mysql+extmail的邮件系统。</p>

<p>用了一段时间后，发现后台管理的extman不能登录了，提示如下</p>

<p><code>
Can't open /tmp/extman//sid_26da75f9aec35f2cbc6b4fa425ab525e, No such file or directory
</code></p>

<p>后来发现是/tmp目录下的extman目录被系统清除了。。</p>

<p>然后再网络上找了一些解决办法，说是Linux系统在启动的时候，会清理/tmp目录。建议将这个目录设置在/var/tmp目录下。</p>

<p>结果用了一段时间后，发现一样是被清理。。。。</p>

<p>我的系统是CentOS 5.3 64bit</p>

<p>最后我通过修改，/var/www/extsuite/extman/webmail.cf文件里面的配置</p>

<p>```</p>

<h1>sys_sess_dir, the session dir</h1>

<p>SYS_SESS_DIR = /tmp/extman/
```</p>

<p>将SYS_SESS_DIR指定到了/data/extman下面了。估计这次系统不会清除这个目录了吧</p>

<p>还有一种常见错误就是提示</p>

<p><code>
Can't open /tmp/extman//sid_89b33ec5ce0b5903f24035aa4ad76d15, Permission denied
</code></p>

<p>这个是因为extman 那个临时目录的权限不对。</p>

<p>可以设置为777就ok了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[drupal在nginx 0.8.15下的简洁URL配置]]></title>
    <link href="http://babodx.github.com/blog/2010/01/01/druapl-url-nginx-rewrite/"/>
    <updated>2010-01-01T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2010/01/01/druapl-url-nginx-rewrite</id>
    <content type="html"><![CDATA[<p>最近在学习drupal，发现这个程序比xoops、joomla都灵活，对应的学习曲线也高。反正安装后，根本不知道真没设置。呵呵</p>

<p>下面先在nginx上配置了rewrite规则，让drupal支持简洁的URL</p>

<p>```
server
{
listen 80;
server_name drupal.xinlogs.com;
index index.html index.htm index.php;
root /data0/htdocs/drupal;</p>

<h1>limit_conn crawler 20;</h1>

<p>location = / {
index index.php;
}</p>

<p>location / {
index index.php index.html;</p>

<p>if (!-f $request_filename) {
rewrite ^(.*)$ /index.php?q=$1 last;
break;
}</p>

<p>if (!-d $request_filename) {
rewrite ^(.*)$ /index.php?q=$1 last;
break;
}
}</p>

<p>location ~ .*.(php|php5)?$
{
fastcgi_pass unix:/tmp/php-cgi.sock;</p>

<h1>fastcgi_pass 127.0.0.1:9000;</h1>

<p>fastcgi_index index.php;
include fcgi.conf;
}</p>

<p>location ~ .*.(gif|jpg|jpeg|png|bmp|swf)$
{
expires 30d;
}</p>

<p>location ~ .*.(js|css)?$
{
expires 1h;
}</p>

<p>log_format drupal_access '$remote_addr - $remote_user [$time_local] "$request" '
'$status $body_bytes_sent "$http_referer" '
'"$http_user_agent" $http_x_forwarded_for';
access_log /data1/logs/drupal_access.log drupal_access;
}
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[apache下多虚拟主机的配置与管理]]></title>
    <link href="http://babodx.github.com/blog/2009/12/30/apache-VirtualHost-Configure/"/>
    <updated>2009-12-30T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2009/12/30/apache-VirtualHost-Configure</id>
    <content type="html"><![CDATA[<p>当一台服务器想给多个域名提供web服务的时候，我们可以使用apache虚拟主机配置。</p>

<p>apache的配置文件在centos系统下，默认放在/etc/httpd/conf目录下的httpd.conf文件里。</p>

<p>虚拟主机的配置如下</p>

<p>```</p>

<h6>#######TEST VirtualHost</h6>

<p><VirtualHost *:80>
ServerAdmin babodx@gmail.com
DocumentRoot "/home/babo"
ServerName www.xinlogs.com
DirectoryIndex index.html
ErrorLog logs/www.xinlogs.com_error_log
CustomLog logs/www.xinlogs.com-access_log common</p>

<p></VirtualHost></p>

<p>```</p>

<p>如果我们apache给10个或更多的域名提供web服务，这样的话，我们的httpd.conf就会有很多<VirtualHost *:80>这样的配置段落，看起来很长，管理起来也很麻烦。而且一个apache同时给几十个web域名提供虚拟主机，完全没有问题。那该如何写配置文件便于我们管理呢？</p>

<h2>解决办法</h2>

<p>为了管理方便，配置文件的结构清晰。</p>

<p>我们完全可以将每个虚拟主机的配置文件放在独立文件中，这样apache的主要配置文件httpd.conf看上去很简洁。</p>

<p>只要在最后加入</p>

<p><code>
Include conf/vhost_*.conf
</code>
 
然后再conf目录里，每个虚拟主机的文件只要以vhost_开头，后面可以用自己的域名加.conf后缀。比如有个test.com的域名要做web。</p>

<p>我们就可以直接在conf目录创建一个vhost_test.com.conf文件，文件里写入虚拟主机配置，比如</p>

<p>```</p>

<h6>#######TEST VirtualHost</h6>

<p><VirtualHost *:80>
ServerAdmin babodx@gmail.com
DocumentRoot "/home/test.com"
ServerName test.com
DirectoryIndex index.html
ErrorLog logs/test.com_error_log
CustomLog logs/test.com-access_log common</p>

<p></VirtualHost>
```
通过这种配置结构，我们管理再多的虚拟主机也不用怕。只要修改conf目录下对应虚拟主机的配置文件即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解决Linux下Tomcat不能重启和停止问题]]></title>
    <link href="http://babodx.github.com/blog/2009/12/28/Tomcat-reboot-problems/"/>
    <updated>2009-12-28T00:00:00+08:00</updated>
    <id>http://babodx.github.com/blog/2009/12/28/Tomcat-reboot-problems</id>
    <content type="html"><![CDATA[<p>我的Tomcat 5.5.28安装在CentOS 5.3 64bit系统上</p>

<p>每次重启都停住，只要要等5-10分钟才可以。</p>

<p>系统reboot或者shutdown也都卡在关闭tomcat的过程中</p>

<p>后来发现直接用/usr/local/tomcat/bin/shutdown.sh一样存在问题，但是如果Tomcat什么项目都不加载，却正常。</p>

<p>我怀疑是tomcat加载的lib或者jar文件一多，重启和关闭就会慢的巨慢。。。甚至10分钟以上。</p>

<p>为了解决这个问题，我修改了/etc/init.d/目录下的tomcat文件，让关闭或者重启的时候，直接通过kill命令杀掉tomcat进程。</p>

<p>下面是我/etc/init.d/tomcat文件</p>

<p>```</p>

<h1>!/bin/bash</h1>

<p>#</p>

<h1>Startup script for the tomcat</h1>

<p>#</p>

<h1>chkconfig: 345 80 15</h1>

<h1>description: Tomcat is a Servlet+JSP Engine.</h1>

<h1>Source function library.</h1>

<p>. /etc/rc.d/init.d/functions</p>

<p>export JAVA_HOME=/usr/local/jdk1.6.0_16
export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
export PATH=$PATH:$JAVA_HOME/bin</p>

<p>export CATALINA_BASE=/usr/local/tomcat
export CATALINA_HOME=/usr/local/tomcat
export CATALINA_TMPDIR=/usr/local/tomcat/temp
export JRE_HOME=/usr/local/jdk1.6.0_16</p>

<p>start(){
if [ -z $(/sbin/pidof java) ]; then
echo "Starting tomcat"
/usr/local/tomcat/bin/startup.sh
touch /var/lock/subsys/tomcat
else
echo "tomcat allready running"
fi
}</p>

<p>stop(){
if [ ! -z $(/sbin/pidof java) ]; then
echo "Shutting down tomcat"</p>

<h1>下面就是关闭的核心代码了，用ps获取tomcat进程id，直接kill掉</h1>

<p>ps aux|grep tomcat|grep startup|awk '{print $2}'|xargs kill -9</p>

<h1>/usr/local/tomcat/bin/shutdown.sh</h1>

<p>until [ -z $(/sbin/pidof java) ]; do :; done
rm -f /var/lock/subsys/tomcat
else
echo "tomcat not running"
fi
}</p>

<p>case "$1" in
start)
start
;;
stop)
stop
;;
restart)
stop
start
;;
status)
/usr/local/tomcat/bin/catalina.sh version
;;
*)
echo "Usage: $0 {start|stop|restart|status}"
esac</p>

<p>exit 0</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
